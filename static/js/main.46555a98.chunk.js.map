{"version":3,"sources":["store/actions/actionTypes.js","helpers/urls.js","helpers/utils.js","store/actions/posts.js","components/PostsList.js","store/actions/auth.js","store/actions/search.js","components/Navbar.js","components/Home.js","components/Page404.js","components/Login.js","components/Signup.js","components/Setting.js","store/actions/profile.js","store/actions/friends.js","components/UserProfile.js","components/FriendsList.js","components/FriendsListItem.js","components/CreatePost.js","components/Post.js","components/Comment.js","components/Chat.js","components/App.js","store/reducers/auth.js","store/reducers/profile.js","store/reducers/friends.js","store/reducers/search.js","store/reducers/index.js","store/reducers/posts.js","index.js"],"names":["UPDATE_POSTS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILED","AUTHENTICATE_USER","LOG_OUT","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAILED","CLEAR_AUTH_STATE","EDIT_USER_SUCCESSFUL","EDIT_USER_FAILED","USER_PROFILE_SUCCESS","USER_PROFILE_FAILURE","FETCH_USER_PROFILE","FETCH_FRIENDS_SUCCESS","ADD_FRIEND","REMOVE_FRIEND","ADD_POST","ADD_COMMENT","UPDATE_POST_LIKE","ADD_COMMENT_LIKES","FETCH_SEARCH_RESULTS_SUCCESS","API_ROOT","APIUrls","page","limit","userId","id","likeType","searchText","getFormBody","params","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","getAuthTokenFromLocalStorage","localStorage","getItem","fetchPosts","dispatch","url","fetch","then","response","json","data","posts","console","log","type","createPost","content","method","headers","Authorization","body","post","success","createComment","postId","post_id","comment","addComment","addLike","addLikeToStore","commentId","addCommentLike","PostsList","this","props","className","map","_id","Component","login","email","password","setItem","token","user","errorMessage","message","error","logoutUser","signup","confirmPassword","name","confirm_password","clearAuthState","editUser","repsonse","searchUsers","searchResultsSuccess","users","Navbar","logOut","removeItem","handleSearch","e","target","value","auth","results","isLoggedin","to","src","alt","placeholder","onChange","length","onClick","React","connect","state","search","Home","friends","Page404","Login","handleEmailChange","setState","handlePasswordChange","handleFormSubmit","preventDefault","inProgress","from","location","pathname","required","disabled","Signup","handleInputChange","field","onFormSubmit","Settings","handleChange","fieldName","val","handleSave","editMode","fetchUserProfile","fetchUserFriends","UserProfile","checkIfUserIsAFriend","match","friend","to_user","indexOf","handleAddFriendClick","a","options","successMessage","friendship","handleRemoveFriendClick","extra","prevProps","prevParams","currentParams","profile","isUserAFriend","FriendsList","FriendsListItem","CreatePost","handleOnClick","Post","handleAddComment","key","handleOnCommentChange","handlePostLike","isPostLikedByUser","likes","includes","updatedAt","slice","comments","onKeyPress","Comment","handleCommentLike","createdAt","style","cursor","Chat","setupConnections","socketConnection","socket","self","on","emit","user_email","userEmail","chatroom","messages","messageObject","typedMessage","handleSubmit","collapseChat","collapsed","io","height","PrivateRoute","privateRouteProps","path","component","render","App","jwt_decode","authenticateUser","exact","initialAuthState","initalProfileState","defaultProfileState","initialSearchState","combineReducers","action","newPosts","updatedPosts","updatedComment","concat","newArr","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.46555a98.chunk.js","sourcesContent":["export const UPDATE_POSTS = \"UPDATE_POSTS\";\r\n\r\n\r\n\r\n// login action types\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\n\r\nexport const AUTHENTICATE_USER = \"AUTHENTICATE_USER\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\n\r\n// signup\r\nexport const SIGNUP_START = 'SIGNUP_START';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAILED = 'SIGNUP_FAILED';\r\n\r\nexport const CLEAR_AUTH_STATE = \"CLEAR_AUTH_STATE\";\r\n\r\n\r\nexport const EDIT_USER_SUCCESSFUL = \"EDIT_USER_SUCCESSFUL\";\r\nexport const EDIT_USER_FAILED = \"EDIT_USER_FAILED\";\r\n\r\nexport const USER_PROFILE_SUCCESS = \"USER_PROFILE_SUCCESS\";\r\nexport const USER_PROFILE_FAILURE = \"USER_PROFILE_FAILURE\";\r\nexport const FETCH_USER_PROFILE = \"FETCH_USER_PROFILE\";\r\n// friends\r\nexport const FETCH_FRIENDS_SUCCESS = 'FETCH_FRIENDS_SUCCESS';\r\nexport const ADD_FRIEND = \"ADD_FRIEND\";\r\nexport const REMOVE_FRIEND = \"REMOVE_FRIEND\";\r\nexport const ADD_POST = \"ADD_POST\";\r\n\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const UPDATE_POST_LIKE = \"UPDATE_POST_LIKE\";\r\nexport const ADD_COMMENT_LIKES = \"ADD_COMMENT_LIKES\";\r\n\r\n\r\nexport const FETCH_SEARCH_RESULTS_SUCCESS = \"FETCH_SEARCH_RESULTS_SUCCESS\";\r\nexport const FETCH_SEARCH_RESULTS_FAILURE = \"FETCH_SEARCH_RESULTS_FAILURE\";","/** @format */\r\n\r\n// HELPER TO STORE URLS\r\nconst API_ROOT = \"http://codeial.codingninjas.com:8000/api/v2\";\r\n\r\nexport const APIUrls = {\r\n  login: () => `${API_ROOT}/users/login`,\r\n  signup: () => `${API_ROOT}/users/signup`,\r\n  editProfile: () => `${API_ROOT}/users/edit`,\r\n  fetchPosts: (page = 1, limit = 25) =>\r\n    `${API_ROOT}/posts?page=${page}&limit=${limit}`,\r\n  userProfile: (userId) => `${API_ROOT}/users/${userId}`,\r\n  userFriends: () => `${API_ROOT}/friendship/fetch_user_friends`,\r\n  addFriend: (userId) =>\r\n    `${API_ROOT}/friendship/create_friendship?user_id=${userId}`,\r\n  removeFriend: (userId) =>\r\n    `${API_ROOT}/friendship/remove_friendship?user_id=${userId}`,\r\n  createPost: () => `${API_ROOT}/posts/create`,\r\n  createComment: () => `${API_ROOT}/comments/`,\r\n  toggleLike: (id, likeType) =>\r\n    `${API_ROOT}/likes/toggle?likeable_id=${id}&likeable_type=${likeType}`,\r\n  userSearch: (searchText) => `${API_ROOT}/users/search?text=${searchText}`,\r\n};\r\n ","/** @format */\r\n\r\nexport function getFormBody(params) {\r\n  let formBody = [];\r\n\r\n  for (let property in params) {\r\n    let encodedKey = encodeURIComponent(property); // 'user name' => 'user%20name'\r\n    let encodedValue = encodeURIComponent(params[property]); // aakash 123 => aakash%2020123\r\n\r\n    formBody.push(encodedKey + \"=\" + encodedValue);\r\n  }\r\n\r\n  return formBody.join(\"&\"); // 'username=aakash&password=123213'\r\n}\r\n\r\n\r\nexport function getAuthTokenFromLocalStorage() {\r\n  return localStorage.getItem(\"token\");\r\n}","/** @format */\r\n\r\nimport {\r\n  UPDATE_POSTS,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  UPDATE_POST_LIKE,\r\n  ADD_COMMENT_LIKES,\r\n} from './actionTypes';\r\nimport { APIUrls } from '../../helpers/urls';\r\nimport { getAuthTokenFromLocalStorage, getFormBody } from '../../helpers/utils';\r\n\r\nexport function fetchPosts() {\r\n  return (dispatch) => {\r\n    const url = APIUrls.fetchPosts();\r\n    fetch(url)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        dispatch(updatePosts(data.data.posts));\r\n      });\r\n  };\r\n}\r\n\r\nexport function updatePosts(posts) {\r\n  return {\r\n    type: UPDATE_POSTS,\r\n    posts,\r\n  };\r\n}\r\n\r\nexport function addPost(post) {\r\n  return {\r\n    type: ADD_POST,\r\n    post,\r\n  };\r\n}\r\n\r\nexport function createPost(content) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.createPost();\r\n\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n      body: getFormBody({ content }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('ADD_POST_DATA', data);\r\n\r\n        if (data.success) {\r\n          dispatch(addPost(data.data.post));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function createComment(content, postId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.createComment();\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n      body: getFormBody({ content, post_id: postId }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          dispatch(addComment(data.data.comment, postId));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function addComment(comment, postId) {\r\n  return {\r\n    type: ADD_COMMENT,\r\n    comment,\r\n    postId,\r\n  };\r\n}\r\n\r\nexport function addLikeToStore(postId, userId) {\r\n  return {\r\n    type: UPDATE_POST_LIKE,\r\n    postId,\r\n    userId,\r\n  };\r\n}\r\n\r\nexport function addCommentLike(commentId, userId) {\r\n  return {\r\n    type: ADD_COMMENT_LIKES,\r\n    commentId,\r\n    userId,\r\n  };\r\n}\r\n\r\nexport function addLike(id, likeType, userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.toggleLike(id, likeType);\r\n\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('LIKE DATA', data);\r\n\r\n        if (data.success) {\r\n          if (likeType === 'Post') {\r\n            dispatch(addLikeToStore(id, userId));\r\n            console.log('POST LIKE CLICKED', likeType);\r\n          } else if (likeType === 'Comment') {\r\n            dispatch(addCommentLike(id, userId));\r\n            console.log('COMMENT LIKE CLICKED', likeType);\r\n          }\r\n        }\r\n      });\r\n  };\r\n}\r\n","/** @format */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {CreatePost,Post } from \"./\";\r\n\r\nclass PostsList extends Component {\r\n   \r\n  render() {\r\n    const { posts } = this.props;\r\n    return (\r\n      <div className=\"posts-list\">\r\n        <CreatePost />\r\n        {posts.map((post) => (\r\n          <Post post={post} key={post._id} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default PostsList;\r\n","/** @format */\r\nimport {\r\n  LOGIN_START,\r\n  LOGIN_FAILED,\r\n  LOGIN_SUCCESS,\r\n  AUTHENTICATE_USER,\r\n  LOG_OUT,\r\n  SIGNUP_START,\r\n  SIGNUP_FAILED,\r\n  SIGNUP_SUCCESS,\r\n  CLEAR_AUTH_STATE,\r\n  EDIT_USER_SUCCESSFUL,\r\n} from './actionTypes';\r\nimport { APIUrls } from '../../helpers/urls';\r\nimport { getFormBody, getAuthTokenFromLocalStorage } from '../../helpers/utils';\r\n\r\nexport function startLogin() {\r\n  return {\r\n    type: LOGIN_START,\r\n  };\r\n}\r\n\r\nexport function loginFailed(errorMessage) {\r\n  return {\r\n    type: LOGIN_FAILED,\r\n    error: errorMessage,\r\n  };\r\n}\r\n\r\nexport function loginSuccess(user) {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function login(email, password) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.login();\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: getFormBody({ email, password }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('data', data);\r\n        if (data.success) {\r\n          // dispatch action to save user\r\n          localStorage.setItem('token', data.data.token);\r\n\r\n          dispatch(loginSuccess(data.data.user));\r\n          return;\r\n        }\r\n        dispatch(loginFailed(data.message));\r\n      });\r\n  };\r\n}\r\n\r\nexport function authenticateUser(user) {\r\n  return {\r\n    type: AUTHENTICATE_USER,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function logoutUser() {\r\n  return {\r\n    type: LOG_OUT,\r\n  };\r\n}\r\n\r\nexport function signup(email, password, confirmPassword, name) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.signup();\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: getFormBody({\r\n        email,\r\n        password,\r\n        confirm_password: confirmPassword,\r\n        name,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // console.log('data', data);\r\n        if (data.success) {\r\n          // do something\r\n          localStorage.setItem('token', data.data.token);\r\n          dispatch(signupSuccessful(data.data.user));\r\n          return;\r\n        }\r\n        dispatch(signupFailed(data.message));\r\n      });\r\n  };\r\n}\r\n\r\nexport function startSingup() {\r\n  return {\r\n    type: SIGNUP_START,\r\n  };\r\n}\r\n\r\nexport function signupFailed(error) {\r\n  return {\r\n    type: SIGNUP_FAILED,\r\n    error,\r\n  };\r\n}\r\n\r\nexport function signupSuccessful(user) {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function clearAuthState() {\r\n  return {\r\n    type: CLEAR_AUTH_STATE,\r\n  };\r\n}\r\n\r\nexport function editUserSuccessful(user) {\r\n  return {\r\n    type: EDIT_USER_SUCCESSFUL,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function editUserFailed(error) {\r\n  return {\r\n    type: EDIT_USER_SUCCESSFUL,\r\n    error,\r\n  };\r\n}\r\n\r\nexport function editUser(name, password, confirmPassword, userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.editProfile();\r\n\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n      body: getFormBody({\r\n        name,\r\n        password,\r\n        confirm_password: confirmPassword,\r\n        id: userId,\r\n      }),\r\n    })\r\n      .then((repsonse) => repsonse.json())\r\n      .then((data) => {\r\n        console.log(\"'EDIT PROFIle data\", data);\r\n        if (data.success) {\r\n          dispatch(editUserSuccessful(data.data.user));\r\n\r\n          if (data.data.token) {\r\n            localStorage.setItem('token', data.data.token);\r\n          }\r\n          return;\r\n        }\r\n\r\n        dispatch(editUserFailed(data.message));\r\n      });\r\n  };\r\n}\r\n","/** @format */\r\n\r\nimport { FETCH_SEARCH_RESULTS_SUCCESS } from './actionTypes';\r\nimport { getAuthTokenFromLocalStorage } from '../../helpers/utils';\r\nimport { APIUrls } from '../../helpers/urls';\r\n\r\nexport function searchUsers(searchText) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.userSearch(searchText);\r\n\r\n    fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((repsonse) => repsonse.json())\r\n      .then((data) => {\r\n        console.log('SEARCH data', data);\r\n        if (data.success) {\r\n          dispatch(searchResultsSuccess(data.data.users));\r\n        } else {\r\n          dispatch(searchResultsSuccess([]));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function searchResultsSuccess(users) {\r\n  return {\r\n    type: FETCH_SEARCH_RESULTS_SUCCESS,\r\n    users,\r\n  };\r\n}\r\n","/** @format */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { logoutUser } from '../store/actions/auth';\r\nimport { searchUsers } from '../store/actions/search';\r\n\r\nclass Navbar extends React.Component {\r\n  logOut = () => {\r\n    localStorage.removeItem('token');\r\n    this.props.dispatch(logoutUser());\r\n  };\r\n\r\n  handleSearch = (e) => {\r\n    const searchText = e.target.value;\r\n\r\n    this.props.dispatch(searchUsers(searchText));\r\n  };\r\n\r\n  render() {\r\n    const { auth, results } = this.props;\r\n    return (\r\n      <div>\r\n        <nav className=\"nav\">\r\n          <div className=\"left-div\">\r\n            {auth.isLoggedin && (\r\n              <Link to=\"/\">\r\n                <img\r\n                  // src=\"https://ninjasfiles.s3.amazonaws.com/0000000000003454.png\"\r\n                  src=\"https://www.newfoundlandpower.com/-/media/Unsorted/126-RATE-STABILZATION-PLAN--HERO-IMAGE/023SOCIALMEDIAHEROIMAGE.jpg?mw=768&hash=0A5CC41FD0DA7D24379CD810409A3224B3A8EBF8\"\r\n                  alt=\"logo\"\r\n                  id=\"logo\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"search-container\">\r\n            <img\r\n              className=\"search-icon\"\r\n              src=\"https://image.flaticon.com/icons/svg/483/483356.svg\"\r\n              alt=\"search-icon\"\r\n            />\r\n            <input placeholder=\"Search\" onChange={this.handleSearch} />\r\n\r\n            {results.length > 0 && (\r\n              <div className=\"search-results\">\r\n                <ul>\r\n                  {results.map((user) => (\r\n                    <li className=\"search-results-row\" key={user._id}>\r\n                      <Link to={`/user/${user._id}`}>\r\n                        <img\r\n                          src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                          alt=\"user-dp\"\r\n                        />\r\n                        <span>{user.name}</span>\r\n                      </Link>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"right-nav\">\r\n            {auth.isLoggedin && (\r\n              <div className=\"user\">\r\n                <Link to=\"/settings\">\r\n                  <img\r\n                    src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                    alt=\"user-dp\"\r\n                    id=\"user-dp\"\r\n                  />\r\n                </Link>\r\n                <span>{auth.user.name}</span>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"nav-links\">\r\n              <ul>\r\n                {!auth.isLoggedin && (\r\n                  <li>\r\n                    <Link to=\"/login\">\r\n                      <img\r\n                        src=\"https://www.seekpng.com/png/full/367-3670610_png-hd-login-green-login-button-png.png\"\r\n                        alt=\"Log in\"\r\n                        id=\"logout-icon\"\r\n                      />\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n\r\n                {auth.isLoggedin && (\r\n                  <li onClick={this.logOut}>\r\n                    <img\r\n                      src=\"https://cdn.imgbin.com/15/17/24/imgbin-shutdown-computer-icons-others-Dx5czGQRB8cTKKpXvDyHct6nK.jpg\"\r\n                      alt=\"Log out\"\r\n                      id=\"logout-icon\"\r\n                    />\r\n                  </li>\r\n                )}\r\n\r\n                {!auth.isLoggedin && (\r\n                  <li>\r\n                    <Link to=\"/signup\">\r\n                      <img\r\n                        src=\"https://www.mywebkc.com/wp-content/uploads/2014/12/Sign-up-Button.png\"\r\n                        alt=\"signup\"\r\n                        id=\"logout-icon\"\r\n                      />\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n    results: state.search.results,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Navbar);\r\n","/** @format */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { PostsList, FriendsList, Chat } from \"./\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const { posts, friends, isLoggedin  } = this.props;\r\n    return (\r\n      <div className=\"home\">\r\n        <PostsList posts={posts} />\r\n        {isLoggedin && <FriendsList friends={friends} />}\r\n        {isLoggedin && <Chat />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\n\r\nfunction Page404(props) {\r\n  return (\r\n    <div>\r\n      <h1>404: Nothing found here!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page404;\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { login, clearAuthState } from '../store/actions/auth';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.emailInputRef = React.createRef();\r\n    // this.passwordInputRef = React.createRef();\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n\r\n  handleEmailChange = (e) => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n\r\n  handlePasswordChange = (e) => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"this.emailInputRef\", this.emailInputRef);\r\n    // console.log(\"this.passwordInputRef\", this.passwordInputRef);\r\n    console.log('this.state', this.state);\r\n    const { email, password } = this.state;\r\n\r\n    if (email && password) {\r\n      this.props.dispatch(login(email, password));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { error, inProgress, isLoggedin } = this.props.auth;\r\n\r\n    const { from } = this.props.location.state || { from: { pathname: '/' } };\r\n\r\n    if (isLoggedin) {\r\n      return <Redirect to={from} />;\r\n    }\r\n    return (\r\n      <form className=\"login-form\">\r\n        <span className=\"login-signup-header\">Log In</span>\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            // ref={this.emailInputRef}\r\n            onChange={this.handleEmailChange}\r\n            value={this.state.email}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            // ref={this.passwordInputRef}\r\n            onChange={this.handlePasswordChange}\r\n            value={this.state.password}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          {inProgress ? (\r\n            <button onClick={this.handleFormSubmit} disabled={inProgress}>\r\n              Logging in...\r\n            </button>\r\n          ) : (\r\n            <button onClick={this.handleFormSubmit} disabled={inProgress}>\r\n              Log In\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Login);\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { startSingup, signup, clearAuthState } from '../store/actions/auth';\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: '',\r\n      confirmPassword: '',\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.setState({\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password, confirmPassword, name } = this.state;\r\n\r\n    if (email && password && confirmPassword && name) {\r\n      this.props.dispatch(startSingup());\r\n      this.props.dispatch(signup(email, password, confirmPassword, name));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { inProgress, error, isLoggedin } = this.props.auth;\r\n    if (isLoggedin) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <form className=\"login-form\">\r\n        <span className=\"login-signup-header\"> Signup</span>\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Name\"\r\n            type=\"text\"\r\n            required\r\n            onChange={(e) => this.handleInputChange('name', e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            required\r\n            onChange={(e) => this.handleInputChange('email', e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Confirm password\"\r\n            type=\"password\"\r\n            required\r\n            onChange={(e) =>\r\n              this.handleInputChange('confirmPassword', e.target.value)\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            required\r\n            onChange={(e) => this.handleInputChange('password', e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <button onClick={this.onFormSubmit} disabled={inProgress}>\r\n            Signup\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Signup);\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { editUser, clearAuthState } from '../store/actions/auth';\r\n\r\nclass Settings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      editMode: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (fieldName, val) => {\r\n    this.setState({\r\n      [fieldName]: val,\r\n    });\r\n  };\r\n\r\n  handleSave = () => {\r\n    const { password, confirmPassword, name } = this.state;\r\n    const { user } = this.props.auth;\r\n\r\n    this.props.dispatch(editUser(name, password, confirmPassword, user._id));\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n  render() {\r\n    const { user, error } = this.props.auth;\r\n    const { editMode } = this.state;\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"img-container\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-dp\"\r\n          />\r\n        </div>\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        {error === false && (\r\n          <div className=\"alert success-dailog\">\r\n            Successfully updated profile!\r\n          </div>\r\n        )}\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Email</div>\r\n          <div className=\"field-value\">{user.email}</div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">name</div>\r\n          {editMode ? (\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => this.handleChange('name', e.target.value)}\r\n              value={this.state.name}\r\n            />\r\n          ) : (\r\n            <div className=\"field-value\">{user.name}</div>\r\n          )}\r\n        </div>\r\n\r\n        {editMode && (\r\n          <div className=\"field\">\r\n            <div className=\"field-label\">New password</div>\r\n\r\n            <input\r\n              type=\"password\"\r\n              onChange={(e) => this.handleChange('password', e.target.value)}\r\n              value={this.state.password}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {editMode && (\r\n          <div className=\"field\">\r\n            <div className=\"field-label\">Confirm password</div>\r\n\r\n            <input\r\n              type=\"password\"\r\n              onChange={(e) =>\r\n                this.handleChange('confirmPassword', e.target.value)\r\n              }\r\n              value={this.state.confirmPassword}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"btn-grp\">\r\n          {editMode ? (\r\n            <button className=\"button save-btn\" onClick={this.handleSave}>\r\n              Save\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"button edit-btn\"\r\n              onClick={(e) => this.handleChange('editMode', true)}>\r\n              {' '}\r\n              Edit profile\r\n            </button>\r\n          )}\r\n\r\n          {editMode && (\r\n            <div\r\n              className=\"go-back\"\r\n              onClick={() => this.handleChange('editMode', false)}>\r\n              Go back\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    auth,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Settings);\r\n","/** @format */\r\n\r\nimport {\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAILURE,\r\n  FETCH_USER_PROFILE,\r\n} from './actionTypes';\r\nimport { APIUrls } from '../../helpers/urls';\r\nimport { getAuthTokenFromLocalStorage } from '../../helpers/utils';\r\n\r\nexport function startUserProfileFetch() {\r\n  return {\r\n    type: FETCH_USER_PROFILE,\r\n  };\r\n}\r\n\r\nexport function userProfileSuccess(user) {\r\n  return {\r\n    type: USER_PROFILE_SUCCESS,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function userProfileFailed(error) {\r\n  return {\r\n    type: USER_PROFILE_FAILURE,\r\n    error,\r\n  };\r\n}\r\n\r\nexport function fetchUserProfile(userId) {\r\n  return (dispatch) => {\r\n    dispatch(startUserProfileFetch());\r\n\r\n    const url = APIUrls.userProfile(userId);\r\n    fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        dispatch(userProfileSuccess(data.data.user));\r\n      });\r\n  };\r\n}\r\n","/** @format */\r\n\r\nimport { APIUrls } from '../../helpers/urls';\r\nimport { getAuthTokenFromLocalStorage } from '../../helpers/utils';\r\nimport {\r\n  FETCH_FRIENDS_SUCCESS,\r\n  ADD_FRIEND,\r\n  REMOVE_FRIEND,\r\n} from './actionTypes';\r\n\r\nexport function fetchUserFriends(userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.userFriends(userId);\r\n    fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('friends data', data);\r\n        dispatch(fetchFriendsSucces(data.data.friends));\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchFriendsSucces(friends) {\r\n  return {\r\n    type: FETCH_FRIENDS_SUCCESS,\r\n    friends,\r\n  };\r\n}\r\n\r\nexport function addFriend(friend) {\r\n  return {\r\n    type: ADD_FRIEND,\r\n    friend,\r\n  };\r\n}\r\n\r\nexport function removeFriend(userId) {\r\n  return {\r\n    type: REMOVE_FRIEND,\r\n    userId,\r\n  };\r\n}\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUserProfile } from '../store/actions/profile';\r\nimport { APIUrls } from '../helpers/urls';\r\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\r\nimport { addFriend, removeFriend } from '../store/actions/friends';\r\n\r\nclass UserProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      success: null,\r\n      error: null,\r\n      successMessage: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n\r\n    if (match.params.userId) {\r\n      // dispatch an action\r\n      this.props.dispatch(fetchUserProfile(match.params.userId));\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      match: { params: prevParams },\r\n    } = prevProps;\r\n\r\n    const {\r\n      match: { params: currentParams },\r\n    } = this.props;\r\n\r\n    if (\r\n      prevParams &&\r\n      currentParams &&\r\n      prevParams.userId !== currentParams.userId\r\n    ) {\r\n      this.props.dispatch(fetchUserProfile(currentParams.userId));\r\n    }\r\n  }\r\n\r\n  checkIfUserIsAFriend = () => {\r\n    console.log('this.props', this.props);\r\n    const { match, friends } = this.props;\r\n    const userId = match.params.userId;\r\n\r\n    const index = friends.map((friend) => friend.to_user._id).indexOf(userId);\r\n\r\n    if (index !== -1) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  handleAddFriendClick = async () => {\r\n    const userId = this.props.match.params.userId;\r\n    const url = APIUrls.addFriend(userId);\r\n\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    };\r\n\r\n    const response = await fetch(url, options);\r\n    const data = await response.json();\r\n\r\n    if (data.success) {\r\n      this.setState({\r\n        success: true,\r\n        successMessage: 'Added friend successfully!',\r\n      });\r\n\r\n      this.props.dispatch(addFriend(data.data.friendship));\r\n    } else {\r\n      this.setState({\r\n        success: null,\r\n        error: data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRemoveFriendClick = async () => {\r\n    // Mini Assignment\r\n    const { match } = this.props;\r\n    const url = APIUrls.removeFriend(match.params.userId);\r\n\r\n    const extra = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    };\r\n\r\n    const response = await fetch(url, extra);\r\n    const data = await response.json();\r\n    console.log('await data', data);\r\n\r\n    if (data.success) {\r\n      // show user message\r\n      this.setState({\r\n        success: true,\r\n        successMessage: 'Removed friends successfully!',\r\n      });\r\n      this.props.dispatch(removeFriend(match.params.userId));\r\n    } else {\r\n      this.setState({\r\n        success: null,\r\n        error: data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      match: { params },\r\n      profile,\r\n    } = this.props;\r\n    console.log('this.props', params);\r\n    const user = profile.user;\r\n\r\n    if (profile.inProgress) {\r\n      return <h1>Loading!</h1>;\r\n    }\r\n\r\n    const isUserAFriend = this.checkIfUserIsAFriend();\r\n    const { success, error, successMessage } = this.state;\r\n\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"img-container\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-dp\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Name</div>\r\n          <div className=\"field-value\">{user.name}</div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Email</div>\r\n          <div className=\"field-value\">{user.email}</div>\r\n        </div>\r\n\r\n        <div className=\"btn-grp\">\r\n          {!isUserAFriend ? (\r\n            <button\r\n              className=\"button save-btn\"\r\n              onClick={this.handleAddFriendClick}>\r\n              Add Friend\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"button save-btn\"\r\n              onClick={this.handleRemoveFriendClick}>\r\n              Remove Friend\r\n            </button>\r\n          )}\r\n          {success && (\r\n            <div className=\"alert success-dailog\">{successMessage}</div>\r\n          )}\r\n          {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ profile, friends }) {\r\n  return {\r\n    profile,\r\n    friends,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(UserProfile);\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { FriendsListItem } from \".\";\r\n    \r\n\r\nconst FriendsList = (props) => {\r\n   console.log(\"friend\",props);\r\n  return (\r\n    <div className=\"friends-list\">\r\n      <div className=\"header\">Friends</div>\r\n\r\n      {props.friends && props.friends.length === 0 && (\r\n        <div className=\"no-friends\">No friends found!</div>\r\n      )}\r\n\r\n      {props.friends &&\r\n        props.friends.map((friend) => (\r\n          <FriendsListItem friend={friend.to_user} key={friend._id} />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendsList;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction FriendsListItem(props) {\r\n \r\n  return (\r\n    <div>\r\n      <Link className=\"friends-item\" to={`user/${props.friend._id}`}>\r\n        <div className=\"friends-img\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-pic\"\r\n          />\r\n        </div>\r\n        <div className=\"friends-name\">{props.friend.email}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendsListItem;\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createPost } from '../store/actions/posts';\r\n\r\nclass CreatePost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: '',\r\n    };\r\n  }\r\n\r\n  handleOnClick = () => {\r\n    // dispatch action\r\n    this.props.dispatch(createPost(this.state.content));\r\n    this.setState({\r\n      content: '',\r\n    });\r\n    console.log('content', this.state.content);\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      content: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"create-post\">\r\n        <textarea\r\n          className=\"add-post\"\r\n          value={this.state.content}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <div>\r\n          <button id=\"add-post-btn\" onClick={this.handleOnClick}>\r\n            Add Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(CreatePost);\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Comment } from './';\r\nimport { createComment, addLike } from '../store/actions/posts';\r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      comment: '',\r\n    };\r\n  }\r\n  handleAddComment = (e) => {\r\n    const { comment } = this.state;\r\n    const { post } = this.props;\r\n\r\n    if (e.key === 'Enter') {\r\n      this.props.dispatch(createComment(comment, post._id));\r\n\r\n      // clear comment\r\n      this.setState({\r\n        comment: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnCommentChange = (e) => {\r\n    this.setState({\r\n      comment: e.target.value,\r\n    });\r\n  };\r\n  handlePostLike = () => {\r\n    const { post, user } = this.props;\r\n    this.props.dispatch(addLike(post._id, 'Post', user._id));\r\n  };\r\n\r\n  render() {\r\n    const { post, user } = this.props;\r\n    const { comment } = this.state;\r\n\r\n    const isPostLikedByUser = post.likes.includes(user._id);\r\n\r\n    return (\r\n      <div className=\"post-wrapper\" key={post._id}>\r\n        <div className=\"post-header\">\r\n          <div className=\"post-avatar\">\r\n            <Link to={`/user/${post.user._id}`}>\r\n              <img\r\n                src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                alt=\"user-pic\"\r\n              />\r\n            </Link>\r\n            <div>\r\n              <span className=\"post-author\">{post.user.name}</span>\r\n              <span className=\"post-time\">\r\n                {post.updatedAt.slice(11, 16)} minute ago\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-content\">{post.content}</div>\r\n\r\n          <div className=\"post-actions\">\r\n            <button className=\"post-like no-btn\" onClick={this.handlePostLike}>\r\n              {isPostLikedByUser ? (\r\n                <img\r\n                  src=\"https://image.flaticon.com/icons/svg/1076/1076984.svg\"\r\n                  alt=\"like post\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src=\"https://image.flaticon.com/icons/svg/1077/1077035.svg\"\r\n                  alt=\"likes-icon\"\r\n                />\r\n              )}\r\n              <span>{post.likes.length}</span>\r\n            </button>\r\n\r\n            <div className=\"post-comments-icon\">\r\n              <img\r\n                src=\"https://image.flaticon.com/icons/svg/1380/1380338.svg\"\r\n                alt=\"comments-icon\"\r\n              />\r\n              <span>{post.comments.length}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-comment-box\">\r\n            <input\r\n              placeholder=\"Start typing a comment\"\r\n              onChange={this.handleOnCommentChange}\r\n              onKeyPress={this.handleAddComment}\r\n              value={comment}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"post-comments-list\">\r\n            {post.comments.map((comment) => (\r\n              <Comment comment={comment} key={comment._id} postId={post._id} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    user: auth.user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Post);\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addLike } from '../store/actions/posts';\r\n\r\nclass Comment extends Component {\r\n  handleCommentLike = () => {\r\n    const { comment, user } = this.props;\r\n    this.props.dispatch(addLike(comment._id, 'Comment', user._id));\r\n    console.log('isCommentLiked', comment.likes.length);\r\n  };\r\n\r\n  render() {\r\n    const { comment, user } = this.props;\r\n    const isCommentLiked = comment.likes.includes(user._id);\r\n\r\n    return (\r\n      <div className=\"post-comment-item\">\r\n        <div className=\"post-comment-header\">\r\n          <span className=\"post-comment-author\">{comment.user.name}</span>\r\n          <span className=\"post-comment-time\">\r\n            {comment.createdAt.slice(11, 16)} mins ago\r\n          </span>\r\n\r\n          {/* <button\r\n            className=\"comment-like no-btn\"\r\n            onClick={this.handleCommentLike}>\r\n            {isCommentLiked ? (\r\n              <img\r\n                src=\"https://image.flaticon.com/icons/svg/1076/1076984.svg\"\r\n                alt=\"like post\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src=\"https://image.flaticon.com/icons/svg/1077/1077035.svg\"\r\n                alt=\"likes-icon\"\r\n              />\r\n            )}\r\n          </button>\r\n          <span className=\"post-comment-likes\">\r\n            {comment.likes.length} likes\r\n          </span> */}\r\n          <button\r\n            style={{ cursor: 'pointer' }}\r\n            className=\"post-like no-btn \"\r\n            onClick={this.handleCommentLike}>\r\n            <span className=\"post-comment-likes\">\r\n              {comment.likes.length} likes\r\n            </span>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"post-comment-content\">{comment.content}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    user: auth.user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Comment);\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { connect } from 'react-redux';\r\nimport '../chat.css';\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messages: [], // {content: 'some message', self: true}\r\n      typedMessage: '',\r\n      collapsed: false,\r\n    };\r\n    this.socket = io.connect('http://codeial.codingninjas.com:5000');\r\n    // this.socket = io.connect('http://54.237.158.65:5000');\r\n    this.userEmail = props.user.email;\r\n\r\n    if (this.userEmail) {\r\n      this.setupConnections();\r\n    }\r\n  }\r\n\r\n  setupConnections = () => {\r\n    const socketConnection = this.socket;\r\n    const self = this;\r\n\r\n    this.socket.on('connect', function () {\r\n      console.log('CONNECTION ESTABLISHED');\r\n\r\n      socketConnection.emit('join_room', {\r\n        user_email: this.userEmail,\r\n        chatroom: 'codeial',\r\n      });\r\n\r\n      socketConnection.on('user_joined', function (data) {\r\n        console.log('NE USER JOINED', data);\r\n      });\r\n    });\r\n\r\n    this.socket.on('receive_message', function (data) {\r\n      // add message to state\r\n      const { messages } = self.state;\r\n      const messageObject = {};\r\n      messageObject.content = data.message;\r\n\r\n      if (data.user_email === self.userEmail) {\r\n        messageObject.self = true;\r\n      }\r\n\r\n      self.setState({\r\n        messages: [...messages, messageObject],\r\n        typedMessage: '',\r\n      });\r\n    });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { typedMessage } = this.state;\r\n\r\n    if (typedMessage && this.userEmail) {\r\n      this.socket.emit('send_message', {\r\n        message: typedMessage,\r\n        user_email: this.userEmail,\r\n        chatroom: 'codeial',\r\n      });\r\n    }\r\n  };\r\n\r\n  collapseChat = () => {\r\n    const { collapsed } = this.state;\r\n\r\n    // console.log(\"Collapsed : \", collapsed);\r\n\r\n    if (collapsed == true) {\r\n      this.setState({\r\n        collapsed: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        collapsed: true,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { typedMessage, messages, collapsed } = this.state;\r\n\r\n    return (\r\n      <div className={collapsed ? 'chat-container' : 'no-chat-box'}>\r\n        <div className=\"chat-header\">\r\n          Chat\r\n          <button className=\"no-btn-box\" onClick={this.collapseChat}>\r\n            <img\r\n              src=\"https://icons-for-free.com/iconfiles/png/512/minus+icon-1320185727443878037.png\"\r\n              alt=\"close-chat\"\r\n              height={17}\r\n            />\r\n          </button>\r\n          {/* <img\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/58/Flat_minus_icon.svg/768px-Flat_minus_icon.svg.png\"\r\n              alt=\"close-chat\"\r\n              height={16}\r\n            /> */}\r\n          {/* <img\r\n            src=\"https://www.iconsdb.com/icons/preview/white/minus-5-xxl.png\"\r\n            alt=\"\"\r\n            height={17}\r\n          /> */}\r\n        </div>\r\n        <div className={collapsed ? 'chat-messages' : 'no-chat'}>\r\n          {messages.map((message) => (\r\n            <div\r\n              className={\r\n                message.self\r\n                  ? 'chat-bubble self-chat'\r\n                  : 'chat-bubble other-chat'\r\n              }>\r\n              {message.content}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className={collapsed ? 'chat-footer' : 'no-chat'}>\r\n          <input\r\n            type=\"text\"\r\n            value={typedMessage}\r\n            onChange={(e) => this.setState({ typedMessage: e.target.value })}\r\n          />\r\n          <button onClick={this.handleSubmit}>Submit</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    user: auth.user,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Chat);\r\n","/** @format */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport { fetchPosts } from '../store/actions/posts';\nimport {\n  Home,\n  Navbar,\n  Page404,\n  Login,\n  Signup,\n  Settings,\n  UserProfile,\n} from './';\nimport jwt_decode from 'jwt-decode';\nimport { authenticateUser } from '../store/actions/auth';\nimport PropTypes from 'prop-types';\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\nimport { fetchUserFriends } from '../store/actions/friends';\n\nconst PrivateRoute = (privateRouteProps) => {\n  const { isLoggedin, path, component: Component } = privateRouteProps;\n\n  return (\n    <Route\n      path={path}\n      render={(props) => {\n        return isLoggedin ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: {\n                from: props.location,\n              },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchPosts());\n    const token = getAuthTokenFromLocalStorage();\n\n    if (token) {\n      const user = jwt_decode(token);\n\n      console.log('user', user);\n      this.props.dispatch(\n        authenticateUser({\n          email: user.email,\n          _id: user._id,\n          name: user.name,\n        }),\n      );\n      this.props.dispatch(fetchUserFriends());\n    }\n  }\n\n  render() {\n    console.log('PROPS', this.props);\n    const { posts, auth, friends } = this.props;\n    return (\n      <Router>\n        <div>\n          <Navbar />\n\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => {\n                return (\n                  <Home\n                    {...props}\n                    posts={posts}\n                    friends={friends}\n                    isLoggedin={auth.isLoggedin}\n                  />\n                );\n              }}\n            />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <PrivateRoute\n              path=\"/settings\"\n              component={Settings}\n              isLoggedin={auth.isLoggedin}\n            />\n            <PrivateRoute\n              path=\"/user/:userId\"\n              component={UserProfile}\n              isLoggedin={auth.isLoggedin}\n            />\n\n            <Route component={Page404} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts,\n    auth: state.auth,\n    friends: state.friends,\n  };\n}\n\nApp.propTypes = {\n  posts: PropTypes.array.isRequired,\n};\nexport default connect(mapStateToProps)(App);\n","/** @format */\r\n\r\nimport {\r\n  LOGIN_START,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  AUTHENTICATE_USER,\r\n  LOG_OUT,\r\n  SIGNUP_START,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAILED,\r\n  CLEAR_AUTH_STATE,\r\n  EDIT_USER_SUCCESSFUL,\r\n  EDIT_USER_FAILED,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialAuthState = {\r\n  user: {},\r\n  error: null,\r\n  isLoggedin: false,\r\n  inProgress: false,\r\n};\r\n\r\nexport default function auth(state = initialAuthState, action) {\r\n  switch (action.type) {\r\n    case CLEAR_AUTH_STATE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case LOGIN_START:\r\n    case SIGNUP_START:\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        isLoggedin: true,\r\n        inProgress: false,\r\n        error: null,\r\n      };\r\n    case LOGIN_FAILED:\r\n    case SIGNUP_FAILED:\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    case AUTHENTICATE_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        isLoggedin: true,\r\n      };\r\n    case LOG_OUT:\r\n      return {\r\n        ...state,\r\n        user: {},\r\n        isLoggedin: false,\r\n      };\r\n    case EDIT_USER_SUCCESSFUL:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        error: false,\r\n      };\r\n    case EDIT_USER_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","/** @format */\r\n\r\nimport {\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAILURE,\r\n  FETCH_USER_PROFILE,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initalProfileState = {\r\n  user: {},\r\n  error: null,\r\n  success: null,\r\n  inProgress: false,\r\n};\r\nexport default function profile(state = initalProfileState, action) {\r\n  switch (action.type) {\r\n    case USER_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        user: action.user,\r\n        inProgress: false,\r\n      };\r\n    case USER_PROFILE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        inProgress: false,\r\n      };\r\n    case FETCH_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  FETCH_FRIENDS_SUCCESS,\r\n  ADD_FRIEND,\r\n  REMOVE_FRIEND,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst defaultProfileState = [];\r\n\r\n// profile reducer\r\nexport default function friends(state = defaultProfileState, action) {\r\n  switch (action.type) {\r\n    case FETCH_FRIENDS_SUCCESS:\r\n      return [...action.friends];\r\n    case ADD_FRIEND:\r\n      return state.concat(action.friend);\r\n    case REMOVE_FRIEND:\r\n      const newArr = state.filter(\r\n        (friend) => friend.to_user._id !== action.userId,\r\n      );\r\n      return newArr;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport { FETCH_SEARCH_RESULTS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialSearchState = {\r\n  results: [],\r\n};\r\n\r\nexport default function search(state = initialSearchState, action) {\r\n  switch (action.type) {\r\n    case FETCH_SEARCH_RESULTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        results: action.users,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport posts from \"./posts\";\r\nimport auth from \"./auth\";\r\nimport profile from \"./profile\";\r\nimport friends from \"./friends\";\r\nimport search from \"./search\";\r\n\r\nexport default combineReducers({\r\n  posts,\r\n  auth,\r\n  profile,\r\n  friends,\r\n  search,\r\n});\r\n","/** @format */\r\n\r\nimport {\r\n  UPDATE_POSTS,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  UPDATE_POST_LIKE,\r\n  ADD_COMMENT_LIKES,\r\n} from \"../actions/actionTypes\";\r\n\r\nexport default function posts(state = [], action) {\r\n  switch (action.type) {\r\n    case UPDATE_POSTS:\r\n      return action.posts;\r\n\r\n    case ADD_POST:\r\n      return [action.post, ...state];\r\n\r\n    case ADD_COMMENT:\r\n      const newPosts = state.map((post) => {\r\n        if (post._id === action.postId) {\r\n          return {\r\n            ...post,\r\n            comments: [action.comment, ...post.comments],\r\n          };\r\n        }\r\n        return post;\r\n      });\r\n      return newPosts;\r\n\r\n    case UPDATE_POST_LIKE:\r\n      const updatedPosts = state.map((post) => {\r\n        if (post._id === action.postId) {\r\n          return {\r\n            ...post,\r\n            likes: [...post.likes, action.userId],\r\n          };\r\n        }\r\n\r\n        return post;\r\n      });\r\n      return updatedPosts;\r\n\r\n    case ADD_COMMENT_LIKES:\r\n      const updatedComment = state.map((comment) => {\r\n        if (comment._id === action.commentId) {\r\n          return {\r\n            ...comment,\r\n            likes: [...comment.likes, action.userId],\r\n            likes: [...likes],\r\n          };\r\n        }\r\n\r\n        return comment;\r\n      });\r\n      return updatedComment;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/** @format */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\n// import { configureStore } from './store';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducers';\n\nimport './index.css';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const store = configureStore();\n// console.log(\"store\", store.getState());\n// console.log(store);\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  rootElement,\n);\n"],"sourceRoot":""}